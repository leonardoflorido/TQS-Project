name: platform backend CI/CD Pipeline

# controls when the action will run
on:
  # triggers the workflow on push for the develop and deployment branches
  push:
    branches: [ develop, deployment ]
    paths-ignore:
      # don't run this workflow when the are pushes, and there are only changes for this directories:
      - 'reporting/**'
      - 'monitoring/**'
      # don't run this workflow when the are pushes and there are only changes for the following files:
      - '**.md'
      - '**.pdf'
      - '**.docx'
      - '**.gitignore'

  # triggers the workflow on pull requests for the main branch
  pull_request:
    branches: [ main, develop, deployment ]
    paths-ignore:
      # don't run this workflow when the are pull requests, and there are only changes for this directories:
      - 'reporting/**'
      - 'monitoring/**'
      # don't run this workflow when the are pull requests, and there are only changes for the following files:
      - '**.md'
      - '**.pdf'
      - '**.docx'
      - '**.gitignore'

  # allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build platform Maven Project
    # the type of runner that the job will run on, in this case, it will run on a ubuntu image
    runs-on: ubuntu-latest

    # steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch from Github
        uses: actions/checkout@v2

      - name: Step 2 - Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Step 3 - Have Github Actions build Maven project
        run: mvn -B package --file platform/backend/pom.xml
        
      - name: Step 4 - List the current directory
        run: ls -la
        
      - name: Step 5 - Show files inside the target/ folder
        run: |
          cd platform/backend/target
          ls -la

  sonar:
    name: platforms's SonarCloud Code Inspection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: f82aca9f68ecd9319170d4acd08e83d521e11b48
          SONAR_HOST_URL: http://localhost:9000
        run: |
          cd platform/backend 
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=TQS_Project
